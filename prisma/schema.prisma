// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  username    String   @unique
  password    String
  userGroupId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  group UserGroup @relation(name: "UserGroupToUser", fields: [userGroupId], references: [id])
}

model UserGroup {
  id        Int      @id @default(autoincrement()) // ID numérico e auto-incremental
  name      String   @unique
  isAdmin   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[] @relation("UserGroupToUser")
}

model BankAccount {
  id                 Int      @id @default(autoincrement())
  name               String
  numberBank         Int?
  agency             String?
  agencyDigit        String?
  numberAccount      String?
  numberAccountDigit String?
  addressType        String?
  address            String?
  addressNumber      String?
  addressComplement  String?
  neighborhood       String?
  city               String?
  uf                 String?
  cep                String?
  phones             String?
  contactPerson      String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([name])
}

model AccountPlan {
  id               Int      @id @default(autoincrement())
  description      String   @unique
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountSubPlans AccountSubPlan[] @relation("AccountPlanToAccountSubPlan")
}

model AccountSubPlan {
  id            Int      @id @default(autoincrement()) // ID numérico e auto-incremental
  description   String   
  accountPlanId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  accountPlan AccountPlan @relation(name: "AccountPlanToAccountSubPlan", fields: [accountPlanId], references: [id])
  
  @@unique([accountPlanId, description])
}